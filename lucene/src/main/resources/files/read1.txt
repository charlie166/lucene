这时候就需要指定scope属性，scope用来指定依赖的范围，当scope指定的值是system的时候，Maven直接从本地文件系统解析构建，而不会去远程仓库查询。

scope还有其它几种取值，说明如下数据数据数据

compile：编译依赖范围，如果没有指定，就会默认使用该依赖范围
test：测试依赖范围，使用此依赖范围的Maven依赖，只对于测试classpath有效，典型的例子是JUnit，它只在编译测试代码及运行测试的时候才需要
provided：已提供依赖范围，使用此依赖范围的Maven依赖，对于编译和测试classpath有效，但在运行时无效，典型的例子是servlet-api，编译和测试项目的时候需要该依赖，但在运行项目的时候，由于容器已经提供，就不需要Maven重复地引入一遍
runtime：运行时依赖范围，使用此依赖范围的Maven依赖，对于测试和运行classpath有效，但在编译主代码时无效。典型的例子是JDBC驱动实现，项目主代码的编译只需要JDK提供的JDBC接口，只有在执行测试或者运行项目的时候才需要实现上述接口的具体JDBC驱动
system：系统依赖范围，该依赖与三种classpath的关系，和provided依赖范围完全一致。但是，在使用system范围的依赖时必须通过systemPath元素显式地指定依赖文件路径。通常此依赖与本机系统绑定，造成构建的不可移植，应该谨慎使用。
import：导入依赖范围，该依赖范围不会对三种classpath产生实际的影响，三种classpath指的是，编译classpath、测试classpath、运行时classpath